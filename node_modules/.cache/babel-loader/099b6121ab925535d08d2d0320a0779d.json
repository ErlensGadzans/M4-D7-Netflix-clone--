{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/erlensgadzans/Documents/DeveloperIT/StriveSchool/homeWork/homeWorks/MODULE4/Netflix-clone-react/src/components/message.js\";\nimport React from 'react';\nimport { Col, Form, Row, Button } from 'react-bootstrap';\n\nclass CommentForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: {\n        elementId: '',\n        rate: 1,\n        comment: ''\n      }\n    };\n\n    this.updateCommentField = e => {\n      let comment = { ...this.state.comment\n      };\n      let currentId = e.currentTarget.imdbID;\n      comment[currentId] = e.currentTarget.value;\n      this.setState({\n        comment: comment\n      });\n    };\n\n    this.submitComment = async e => {\n      e.preventDefault();\n\n      try {\n        let response = await fetch('https://striveschool-api.herokuapp.com/api/comment', {\n          method: 'POST',\n          body: JSON.stringify(this.state.comment),\n          headers: new Headers({\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmI3OTg1Yzk4MzViMDAwMTc1ODUwNGUiLCJpYXQiOjE2MDU4Njc2MTIsImV4cCI6MTYwNzA3NzIxMn0.U6mxgBFpYT7skg3ZUkt222yuYfZdPD1e_0OV27UXk0c\"\n          })\n        });\n\n        if (response.ok) {\n          alert('Comment added!');\n          this.setState({\n            comment: {\n              elementId: '',\n              rate: 1,\n              comment: ''\n            }\n          });\n        } else {\n          console.log('please check again');\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onsubmit: this.submitComment,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"rate\",\n              children: \"Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"rate\",\n              id: \"rate\",\n              value: this.state.comment.rate,\n              onChange: this.updateCommentField,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"comment\",\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"comment\",\n              id: \"comment\",\n              placeholder: \"Your comment\",\n              required: true,\n              value: this.state.comment.comment,\n              onChange: this.updateCommentField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/erlensgadzans/Documents/DeveloperIT/StriveSchool/homeWork/homeWorks/MODULE4/Netflix-clone-react/src/components/message.js"],"names":["React","Col","Form","Row","Button","CommentForm","Component","state","comment","elementId","rate","updateCommentField","e","currentId","currentTarget","imdbID","value","setState","submitComment","preventDefault","response","fetch","method","body","JSON","stringify","headers","Headers","ok","alert","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Col, Form, Row, Button} from 'react-bootstrap'\n\n class CommentForm extends React.Component {\n     state = {\n         comment: {\n             elementId: '', \n             rate: 1,\n             comment: '',\n        }\n     }\n     \n     updateCommentField = (e) => {\n         let comment = { ...this.state.comment }\n         let currentId = e.currentTarget.imdbID\n        \n         comment[currentId] = e.currentTarget.value\n         this.setState({ comment: comment })\n     }\n\n     submitComment = async (e) => {\n         e.preventDefault();\n         try {\n             let response = await fetch('https://striveschool-api.herokuapp.com/api/comment',\n                 {\n                     method: 'POST',\n                     body: JSON.stringify(this.state.comment),\n                     headers: new Headers\n                         ({\n                         \"Content-Type\": \"application/json\",\n                        \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmI3OTg1Yzk4MzViMDAwMTc1ODUwNGUiLCJpYXQiOjE2MDU4Njc2MTIsImV4cCI6MTYwNzA3NzIxMn0.U6mxgBFpYT7skg3ZUkt222yuYfZdPD1e_0OV27UXk0c\"\n                        })\n                 })\n             if (response.ok) {\n                 alert('Comment added!')\n                 this.setState({\n                    comment: {\n                        elementId: '',\n                        rate: 1,\n                        comment: '',\n                   }\n                 })\n             } else {\n                 console.log('please check again')\n             }\n         } catch (e) {\n             console.log(e)\n         }\n     }\n     render() {\n        return (\n            <Form onsubmit={this.submitComment}>\n                <Row>\n                    <Col md={6}>\n                        <Form.Group>\n                            <Form.Label htmlFor=\"rate\">\n                                Rate\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                name=\"rate\"\n                                id=\"rate\"\n                                value={this.state.comment.rate}\n                                onChange={this.updateCommentField}\n                            >\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12}>\n                    <Form.Group>\n                            <Form.Label htmlFor=\"comment\">\n                                Comment\n                            </Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                name=\"comment\"\n                                id=\"comment\"\n                                placeholder=\"Your comment\" \n                                required\n                                value={this.state.comment.comment}\n                                onChange={this.updateCommentField}\n                            />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Button type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\nexport default CommentForm"]},"metadata":{},"sourceType":"module"}