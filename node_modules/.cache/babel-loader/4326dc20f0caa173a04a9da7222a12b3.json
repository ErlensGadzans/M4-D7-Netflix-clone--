{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/erlensgadzans/Documents/DeveloperIT/StriveSchool/homeWork/homeWorks/MODULE4/M4-D7-Netflix-clone--/src/components/MovieList.jsx\";\nimport React from 'react';\nimport { Container, Row, FormControl } from \"react-bootstrap\";\nimport SingleMovie from './SingleMovie';\nimport './MovieList.css';\n\nclass MovieList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      titles: [\"batman\", \"superman\", \"titanic\"],\n      movies: [],\n      filtered: [],\n      array: [],\n      input: \"\"\n    };\n\n    this.fetchMovies = async titles => {\n      try {\n        const response = await fetch(\"http://www.omdbapi.com/?apikey=ada5e6d6&s=\" + titles, {\n          method: \"GET\"\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          this.state.array.push(...data.Search);\n          console.log(this.state.array);\n          this.setState({\n            movies: this.state.array,\n            filtered: this.state.array\n          });\n          console.log(\"state\", this.state.movies);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.componentDidMount = async () => {\n      {\n        this.state.titles.forEach(movie => this.fetchMovies(movie));\n      }\n    };\n\n    this.FindMovie = query => {\n      const clone = { ...this.state.array\n      };\n      this.setState({\n        input: query\n      });\n\n      if (this.state.input.length > 1) {\n        let filteredMovies = this.state.movies.filter(movie => movie.Title.toLowerCase().includes(this.state.input.toLowerCase()));\n        this.setState({\n          filtered: filteredMovies\n        });\n      } else {\n        this.setState({\n          filtered: this.state.array\n        });\n      }\n    };\n  }\n\n  render(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: \" justify-content-center mt-3 mx-0 mb-5\",\n        style: {\n          overflowX: \"hidden\",\n          backgroundColor: \"#2c2c2c\",\n          color: \"#ffff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center justify-content-start m-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"TV SHOWS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"genres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"ml-4\",\n            placeholder: \"Search movies\",\n            \"aria-label\": \"Search\",\n            style: {\n              width: \"200px\"\n            },\n            value: this.state.input,\n            onChange: e => this.FindMovie(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-3 mb-5\",\n          children: this.state.filtered.map((m, index) => /*#__PURE__*/_jsxDEV(SingleMovie, {\n            movie: m\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/erlensgadzans/Documents/DeveloperIT/StriveSchool/homeWork/homeWorks/MODULE4/M4-D7-Netflix-clone--/src/components/MovieList.jsx"],"names":["React","Container","Row","FormControl","SingleMovie","MovieList","Component","state","titles","movies","filtered","array","input","fetchMovies","response","fetch","method","ok","data","json","push","Search","console","log","setState","e","componentDidMount","forEach","movie","FindMovie","query","clone","length","filteredMovies","filter","Title","toLowerCase","includes","render","props","overflowX","backgroundColor","color","width","target","value","map","m","index"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Container, Row, FormControl } from \"react-bootstrap\";\nimport SingleMovie from './SingleMovie';\nimport './MovieList.css';\n\n\nclass MovieList extends React.Component {\n    state = {\n      titles:[\"batman\", \"superman\", \"titanic\"],\n      movies:[],\n      filtered:[],\n      array: [],\n      input:\"\"\n    }\n\n    fetchMovies = async (titles) => {\n      try {\n        const response = await fetch(\"http://www.omdbapi.com/?apikey=ada5e6d6&s=\"+ titles,\n          {\n            method: \"GET\",\n          }\n        );\n        if (response.ok) {\n          const data = await response.json();\n          this.state.array.push(...data.Search);\n          console.log(this.state.array);\n          this.setState({ movies: this.state.array, filtered:this.state.array });\n          console.log(\"state\", this.state.movies);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n      componentDidMount = async () => {  \n        {this.state.titles.forEach((movie) => (\n            this.fetchMovies(movie)\n        ))}\n      };\n\n      FindMovie = (query) => {\n        const clone = { ...this.state.array };\n        this.setState({input:query})\n          if (this.state.input.length>1) {\n                let filteredMovies = this.state.movies.filter((movie) =>\n                    movie.Title.toLowerCase().includes(this.state.input.toLowerCase())\n                );\n              this.setState({ filtered: filteredMovies });\n          } else{\n            this.setState({ filtered: this.state.array });\n          }\n      };\n  \n     render(props){\n        return (\n            <div>\n                <Container fluid className=\" justify-content-center mt-3 mx-0 mb-5\" style={{overflowX: \"hidden\", backgroundColor: \"#2c2c2c\", color:\"#ffff\"}}>\n                        <div className=\"d-flex align-items-center justify-content-start m-0\">\n                        <h2>TV SHOWS</h2>\n                        <select>\n                            <option>genres</option>\n                        </select>\n                        <FormControl\n                        className=\"ml-4\"\n                            placeholder=\"Search movies\"\n                            aria-label=\"Search\"\n                            style={{ width: \"200px\" }}\n                            value={this.state.input}\n\n                            onChange={(e) => this.FindMovie(e.target.value)}\n                        />\n                        </div>\n                   <Row className=\"mt-3 mb-5\">\n                   {this.state.filtered.map((m, index) => (\n                            <SingleMovie movie={m} key={index} />\n                        ))}\n                    </Row>\n                </Container>\n            \n            </div>\n        );\n    }\n}\n\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}