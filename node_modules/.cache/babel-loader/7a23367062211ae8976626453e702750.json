{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/erlensgadzans/Documents/DeveloperIT/StriveSchool/homeWork/homeWorks/MODULE4/Netflix-clone-react/src/components/ShowDetail.jsx\";\nimport React from 'react';\nimport Modal from \"./Modal\";\nimport { ListGroup } from \"react-bootstrap\";\n\nclass Comment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: []\n    };\n\n    this.fetchComments = async () => {\n      try {\n        let response = await fetch(\"https://striveschool-api.herokuapp.com/api/comment\" + this.props.data.imdbID, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmI3OTg1Yzk4MzViMDAwMTc1ODUwNGUiLCJpYXQiOjE2MDU4Njc2MTIsImV4cCI6MTYwNzA3NzIxMn0.U6mxgBFpYT7skg3ZUkt222yuYfZdPD1e_0OV27UXk0c\"\n          }\n        });\n\n        if (response.ok) {\n          const comments = await response.json();\n          this.setState({\n            comments\n          });\n        } else {\n          console.log(\"an error occurred\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchComments();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.movie.imdbID !== this.props.movie.imdbID) {\n      this.fetchComments();\n    }\n  }\n\n  render() {\n    const {\n      comments\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        fetchComments: this.fetchBooks,\n        book: this.props.book\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), this.state.comments.map((comments, index) => /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), \" \", comments.author, \", \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Comment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 47\n          }, this), \" \", comments.comment, \", \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 83\n          }, this), \" \", comments.rate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["/Users/erlensgadzans/Documents/DeveloperIT/StriveSchool/homeWork/homeWorks/MODULE4/Netflix-clone-react/src/components/ShowDetail.jsx"],"names":["React","Modal","ListGroup","Comment","Component","state","comments","fetchComments","response","fetch","props","data","imdbID","method","headers","ok","json","setState","console","log","e","componentDidMount","componentDidUpdate","prevProps","movie","render","fetchBooks","book","map","index","author","comment","rate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD4B;;AAAA,SAYpCC,aAZoC,GAYpB,YAAY;AAC1B,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,uDACE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAFM,EAGxB;AACEC,UAAAA,MAAM,EAAE,KADV;AAGEC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEP,6BAAgB;AAFT;AAHX,SAHwB,CAA1B;;AAYA,YAAIN,QAAQ,CAACO,EAAb,EAAiB;AACf,gBAAMT,QAAQ,GAAG,MAAME,QAAQ,CAACQ,IAAT,EAAvB;AACA,eAAKC,QAAL,CAAc;AACZX,YAAAA;AADY,WAAd;AAGD,SALD,MAKO;AACLY,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAED;AACF,OAtBD,CAsBE,OAAOC,CAAP,EAAU;AACVF,QAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF,KAtCmC;AAAA;;AAIpCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,aAAL;AACD;;AACDe,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACC,KAAV,CAAgBZ,MAAhB,KAA2B,KAAKF,KAAL,CAAWc,KAAX,CAAiBZ,MAAhD,EAAwD;AACtD,WAAKL,aAAL;AACD;AACF;;AA6BDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEA,QAAC,WAAD;AAAa,QAAA,aAAa,EAAE,KAAKqB,UAAjC;AAA6C,QAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWiB;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFA,EAGC,KAAKtB,KAAL,CAAWC,QAAX,CAAoBsB,GAApB,CAAwB,CAACtB,QAAD,EAAWuB,KAAX,kBACrB,QAAC,SAAD;AAAA,+BACI,QAAC,SAAD,CAAW,IAAX;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,OACcvB,QAAQ,CAACwB,MADvB,qBACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhC,OACiDxB,QAAQ,CAACyB,OAD1D,qBACoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADpE,OACoFzB,QAAQ,CAAC0B,IAD7F;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAgBH,KAAhB;AAAA;AAAA;AAAA;AAAA,cADH,CAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAxDmC;;AA2DtC,eAAe1B,OAAf","sourcesContent":["import React from 'react'\nimport Modal from \"./Modal\";\nimport { ListGroup } from \"react-bootstrap\";\n\nclass Comment extends React.Component {\n  state = {\n    comments: [],\n  };\n  componentDidMount() {\n    this.fetchComments();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.movie.imdbID !== this.props.movie.imdbID) {\n      this.fetchComments();\n    }\n  }\n  fetchComments = async () => {\n    try {\n      let response = await fetch(\n        \"https://striveschool-api.herokuapp.com/api/comment\" +\n          this.props.data.imdbID,\n        {\n          method: \"GET\",\n\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\":\"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmI3OTg1Yzk4MzViMDAwMTc1ODUwNGUiLCJpYXQiOjE2MDU4Njc2MTIsImV4cCI6MTYwNzA3NzIxMn0.U6mxgBFpYT7skg3ZUkt222yuYfZdPD1e_0OV27UXk0c\",\n        },\n        }\n      );\n      if (response.ok) {\n        const comments = await response.json();\n        this.setState({\n          comments,\n        });\n      } else {\n        console.log(\"an error occurred\");\n   \n      }\n    } catch (e) {\n      console.log(e); \n    }\n  };\n\n  render() {\n    const { comments } = this.state;\n    return (\n      <div className=\"mb-5\">\n      \n      <CommentForm fetchComments={this.fetchBooks} book={this.props.book} />\n      {this.state.comments.map((comments, index) => (\n          <ListGroup key={index}>\n              <ListGroup.Item>\n              <b>Name:</b> {comments.author}, <b>Comment:</b> {comments.comment}, <b>Rating:</b> {comments.rate}\n              </ListGroup.Item>\n          </ListGroup>\n      ))  }\n  </div>\n\n    );\n  }\n}\n\nexport default Comment;"]},"metadata":{},"sourceType":"module"}