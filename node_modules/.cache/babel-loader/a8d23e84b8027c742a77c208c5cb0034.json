{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/erlensgadzans/Documents/DeveloperIT/StriveSchool/homeWork/homeWorks/MODULE4/Netflix-clone-react/src/components/Modal.js\";\nimport React, { useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport CommentForm from \"./message\";\n\nclass ModalForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false,\n      movies: this.props.data ? this.props.data : {}\n    };\n\n    this.onChangeHandler = e => {\n      this.setState({\n        movies: { ...this.state.movies,\n          [e.target.id]: e.target.value\n        }\n      });\n    };\n\n    this.handleSubmit = async () => {\n      const url = this.props.method === \"PUT\" ? \"https://striveschool-api.herokuapp.com/api/comment\" + this.props.data.imdbID : \"https://striveschool-api.herokuapp.com/api/comment\";\n\n      try {\n        const response = await fetch(url, {\n          method: this.props.method,\n          body: JSON.stringify(this.state.movies),\n          headers: new Headers({\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmI3OTg1Yzk4MzViMDAwMTc1ODUwNGUiLCJpYXQiOjE2MDU4Njc2MTIsImV4cCI6MTYwNzA3NzIxMn0.U6mxgBFpYT7skg3ZUkt222yuYfZdPD1e_0OV27UXk0c\"\n          })\n        });\n\n        if (response.ok) {\n          alert(\"ok\");\n          this.props.refetchData();\n          this.setState({\n            show: false\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: () => this.setState({\n          show: true\n        }),\n        children: this.props.btn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.show,\n        onHide: () => this.setState({\n          show: false\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ModalForm;","map":{"version":3,"sources":["/Users/erlensgadzans/Documents/DeveloperIT/StriveSchool/homeWork/homeWorks/MODULE4/Netflix-clone-react/src/components/Modal.js"],"names":["React","useState","Button","Form","Modal","CommentForm","ModalForm","Component","state","show","movies","props","data","onChangeHandler","e","setState","target","id","value","handleSubmit","url","method","imdbID","response","fetch","body","JSON","stringify","headers","Headers","ok","alert","refetchData","console","log","render","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,OAAOC,WAAP,MAAwB,WAAxB;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWC,IAA7B,GAAoC;AAFtC,KAD8B;;AAAA,SAMtCC,eANsC,GAMnBC,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACZL,QAAAA,MAAM,EAAE,EACN,GAAG,KAAKF,KAAL,CAAWE,MADR;AAEN,WAACI,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAFlB;AADI,OAAd;AAMD,KAbqC;;AAAA,SAetCC,YAfsC,GAevB,YAAY;AACzB,YAAMC,GAAG,GACP,KAAKT,KAAL,CAAWU,MAAX,KAAsB,KAAtB,GACI,uDACA,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,MAFpB,GAGI,oDAJN;;AAKA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAM;AAChCC,UAAAA,MAAM,EAAE,KAAKV,KAAL,CAAWU,MADa;AAEhCI,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKnB,KAAL,CAAWE,MAA1B,CAF0B;AAGhCkB,UAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,4BAAgB,kBADG;AAEnB,6BAAgB;AAFG,WAAZ;AAHuB,SAAN,CAA5B;;AAQA,YAAIN,QAAQ,CAACO,EAAb,EAAiB;AACfC,UAAAA,KAAK,CAAC,IAAD,CAAL;AACA,eAAKpB,KAAL,CAAWqB,WAAX;AACA,eAAKjB,QAAL,CAAc;AAAEN,YAAAA,IAAI,EAAE;AAAR,WAAd;AACD;AACF,OAdD,CAcE,OAAOK,CAAP,EAAU;AACVmB,QAAAA,OAAO,CAACC,GAAR,CAAYpB,CAAZ;AACD;AACF,KAtCqC;AAAA;;AAwCtCqB,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAjB;AACA,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,MAAM,KAAKO,QAAL,CAAc;AAAEN,UAAAA,IAAI,EAAE;AAAR,SAAd,CAAzC;AAAA,kBACG,KAAKE,KAAL,CAAWyB;AADd;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD;AACE,QAAA,IAAI,EAAE,KAAK5B,KAAL,CAAWC,IADnB;AAEE,QAAA,MAAM,EAAE,MAAM,KAAKM,QAAL,CAAc;AAAEN,UAAAA,IAAI,EAAE;AAAR,SAAd,CAFhB;AAAA,gCAIE,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,KAAD,CAAO,IAAP;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,oBADF;AAqBD;;AA/DqC;;AAiExC,eAAeH,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport CommentForm from \"./message\"\n\nclass ModalForm extends React.Component {\n  state = {\n    show: false,\n    movies: this.props.data ? this.props.data : {},\n  };\n\n  onChangeHandler = (e) => {\n    this.setState({\n      movies: {\n        ...this.state.movies,\n        [e.target.id]: e.target.value,\n      },\n    });\n  };\n\n  handleSubmit = async () => {\n    const url =\n      this.props.method === \"PUT\"\n        ? \"https://striveschool-api.herokuapp.com/api/comment\" +\n          this.props.data.imdbID\n        : \"https://striveschool-api.herokuapp.com/api/comment\";\n    try {\n      const response = await fetch(url, {\n        method: this.props.method,\n        body: JSON.stringify(this.state.movies),\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Authorization\":\"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmI3OTg1Yzk4MzViMDAwMTc1ODUwNGUiLCJpYXQiOjE2MDU4Njc2MTIsImV4cCI6MTYwNzA3NzIxMn0.U6mxgBFpYT7skg3ZUkt222yuYfZdPD1e_0OV27UXk0c\",\n        }),\n      });\n      if (response.ok) {\n        alert(\"ok\");\n        this.props.refetchData();\n        this.setState({ show: false });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <>\n        <Button variant=\"success\" onClick={() => this.setState({ show: true })}>\n          {this.props.btn}\n        </Button>\n\n        <Modal\n          show={this.state.show}\n          onHide={() => this.setState({ show: false })}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <CommentForm/>\n          </Modal.Body>\n          <Modal.Footer>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default ModalForm;"]},"metadata":{},"sourceType":"module"}